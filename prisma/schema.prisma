// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id  String  @id @default(cuid())
  name String
  email   String @unique
  password  String
  mobile String?
  // products Product[]
  token Token?
  cart Cart?
  order Order[]
  wishlist WishList[]
  @@map("user")
}

model Product {
  id  String  @id @default(cuid())
  // user User @relation(fields: [userId], references: [id])
  // userId String
  title   String
  imageUrl  String
  price   Decimal @db.Decimal(15, 2)
  description  String @db.VarChar(255)
  cartItem CartItem[]
  orderItem OrderItem[]
  wishlist WishList[]
  type String @default("others")
  status String @default("NEW")
  discount Float @default(0)
  quantity Int @default(0)
  available Boolean @default(true)
  @@map("product")
}

model Token {
  user User @relation(fields: [userId], references: [id])
  userId String
  token String
  expireIn DateTime
  @@id([userId])
  @@map("token")
}

model Coupon {
  id  String  @id @default(cuid())
  code String
  discount Float @default(0)
  expireIn DateTime
  amount Int @default(10)
  couponItem CouponItem?
}

model Cart {
  id  String  @id @default(cuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  couponItem CouponItem[]
  cartItem CartItem[]
  @@map("cart")
}

model Order {
  id  String  @id @default(cuid())
  orderItem OrderItem[]
  user User @relation(fields: [userId], references: [id])
  userId String
  @@map("order")
}

model CartItem {
  quantity Int
  product Product @relation(fields: [productId], references: [id])
  productId String
  cart Cart @relation(fields: [cartId], references: [id])
  cartId String
  @@id([productId, cartId])
  @@map("cartitem")
}

model OrderItem {
  quantity Int
  product Product @relation(fields: [productId], references: [id])
  productId String
  order Order @relation(fields: [orderId], references: [id])
  orderId String
  @@id([productId, orderId])
  @@map("orderitem")
}

model CouponItem {
  coupon Coupon @relation(fields: [couponId], references: [id])
  couponId String
  cart Cart @relation(fields: [cartId], references: [id])
  cartId String
  @@id([couponId, cartId])
  @@map("couponitem")
}

model WishList {
  product Product @relation(fields: [productId], references: [id])
  productId String
  user User @relation(fields: [userId], references: [id])
  userId String
  @@id([productId, userId])
  @@map("wishlist")
}

